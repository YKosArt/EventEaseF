@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
<!--inject IHttpContextAccessor HttpContextAccessor-->
@inject NavigationManager Navigation

<div class="container mt-5">
    <div class="row justify-content-center">
        <div class="col-md-6 text-center">
            <div class="card">
                <div class="card-body py-5">
                    <i class="fas fa-lock fa-4x text-primary mb-4"></i>
                    <h3 class="mb-3">–ù–µ–æ–±—Ö—ñ–¥–Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—è</h3>
                    <p class="text-muted mb-4">
                        –î–ª—è –¥–æ—Å—Ç—É–ø—É –¥–æ —Ü—ñ—î—ó —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ø–æ—Ç—Ä—ñ–±–Ω–æ —É–≤—ñ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É.
                    </p>
                    <div class="d-flex justify-content-center gap-3">
                        <a href="/login" class="btn btn-primary">
                            <i class="fas fa-sign-in-alt me-2"></i>–£–≤—ñ–π—Ç–∏
                        </a>
                        <a href="/register" class="btn btn-outline-primary">
                            <i class="fas fa-user-plus me-2"></i>–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    protected override async Task OnInitializedAsync()
    {
        try
        {
            // ‚è≥ –ó–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ —Ä–µ–¥—ñ—Ä–µ–∫—Ç–æ–º (–æ–ø—Ü—ñ–π–Ω–æ)
            await Task.Delay(3000);

            // üîÅ –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ –≥–æ–ª–æ–≤–Ω—É —Å—Ç–æ—Ä—ñ–Ω–∫—É
            Navigation.NavigateTo("/", forceLoad: true);
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error during redirection: {ex.Message}");
        }
    }
}


